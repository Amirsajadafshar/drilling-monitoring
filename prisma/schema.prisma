// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Oil Well Model
model Well {
  id              String   @id @default(cuid())
  name            String
  location        String
  field           String?
  status          WellStatus @default(DRILLING)
  depth           Float
  targetDepth     Float?
  temperature     Float?
  pressure        Float?
  flowRate        Float?
  witsmlVersion   String   @default("2.1")
  latitude        Float?
  longitude       Float?
  operator        String?
  contractor      String?
  spudDate        DateTime?
  completionDate  DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relationships
  drillingParameters DrillingParameter[]
  witsmlData        WitsmlData[]
  wellLogs          WellLog[]
  operations        Operation[]

  @@map("wells")
}

// Drilling Parameters Model
model DrillingParameter {
  id        String   @id @default(cuid())
  wellId    String
  name      String
  value     Float
  unit      String
  status    ParameterStatus @default(NORMAL)
  timestamp DateTime @default(now())
  
  well      Well     @relation(fields: [wellId], references: [id], onDelete: Cascade)

  @@map("drilling_parameters")
}

// WITSML Data Model
model WitsmlData {
  id          String   @id @default(cuid())
  wellId      String
  dataType    String   // e.g., "drilling", "production", "geology"
  version     String   @default("2.1")
  xmlData     String?
  jsonData    String?
  timestamp   DateTime @default(now())
  
  well        Well     @relation(fields: [wellId], references: [id], onDelete: Cascade)

  @@map("witsml_data")
}

// Well Log Model
model WellLog {
  id          String   @id @default(cuid())
  wellId      String
  logType     String   // e.g., "gamma", "resistivity", "porosity"
  depth       Float
  value       Float
  unit        String
  timestamp   DateTime @default(now())
  
  well        Well     @relation(fields: [wellId], references: [id], onDelete: Cascade)

  @@map("well_logs")
}

// Operation Model
model Operation {
  id          String   @id @default(cuid())
  wellId      String
  type        OperationType
  description String?
  startTime   DateTime
  endTime     DateTime?
  status      OperationStatus @default(PLANNED)
  result      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  well        Well     @relation(fields: [wellId], references: [id], onDelete: Cascade)

  @@map("operations")
}

// Enums
enum WellStatus {
  DRILLING
  PRODUCING
  COMPLETED
  PLANNED
  SUSPENDED
  ABANDONED
}

enum ParameterStatus {
  NORMAL
  WARNING
  CRITICAL
  UNKNOWN
}

enum OperationType {
  DRILLING
  CASING
  CEMENTING
  LOGGING
  COMPLETION
  TESTING
  WORKOVER
  PLUGGING
}

enum OperationStatus {
  PLANNED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  DELAYED
}